{*---------------------------------------------------------------------------
프로그램ID    : LOSTA240Q ( 분실폰 상태별 현황 (일별))
프로그램 종류 : Online
작성자	      : jung hong ryul
작성일	      : 2011. 09. 08
완료일	      : ####. ##. ##
프로그램 개요 : 감독국정보 자료를 등록, 수정, 삭제, 조회한다.

     * TYPE절은 입력화면과 공통으로 사용하므로 IMPLEMENTATION 앞쪽에 위치....
-------------------------------------------------------------------------------
<버전 관리>
변경일자      :
작성자	      :
변경내용      :
처리번호      :
Ver	      :
-----------------------------------------------------------------------------*}

unit u_LOSTA240Q;

interface

uses
   Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, ExtCtrls, ComCtrls, Grids, Mask, ToolEdit,
  inifiles, WinSkinData, common_lib, Func_Lib, so_tmax, Menus, Clipbrd,
  printers, LOSTA240Q_PRT_HEAD, ComObj;

const
  TITLE   = ' 분실폰 상태별 현황 (일별)';
  PGM_ID  = 'LOSTA240Q';

type
  Tfrm_LOSTA240Q = class(TForm)
    pnl_Command: TPanel;
    sts_Message: TStatusBar;
    Bevel1: TBevel;
    pnl_Program_Name: TLabel;
    Panel2: TPanel;
    Bevel2: TBevel;
    Label2: TLabel;
    Label1: TLabel;
    dte_to: TDateEdit;
    dte_from: TDateEdit;
    Label3: TLabel;
    Bevel3: TBevel;
    cmb_id_cd: TComboBox;
    grd_display: TStringGrid;
    TMAX: TTMAX;
    SkinData1: TSkinData;
    PopupMenu1: TPopupMenu;
    Copy1: TMenuItem;
    btn_Add: TSpeedButton;
    btn_Update: TSpeedButton;
    btn_Delete: TSpeedButton;
    btn_Inquiry: TSpeedButton;
    btn_Link: TSpeedButton;
    btn_excel: TSpeedButton;
    btn_Print: TSpeedButton;
    btn_query: TSpeedButton;
    btn_Close: TSpeedButton;
    btn_Reset: TSpeedButton;
    procedure btn_CloseClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btn_InquiryClick(Sender: TObject);
    procedure dte_toExit(Sender: TObject);
    procedure dte_fromExit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btn_PrintClick(Sender: TObject);
    procedure btn_queryClick(Sender: TObject);
    procedure btn_excelClick(Sender: TObject);
    procedure Copy1Click(Sender: TObject);
    procedure grd_displayDrawCell(Sender: TObject; ACol, ARow: Integer;
      Rect: TRect; State: TGridDrawState);
    procedure grd_displayKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
   procedure StringGrid_DrawCell(Sender: TObject; ACol, ARow: Integer;
    Rect: TRect; i_align : integer);
    procedure dte_fromKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure dte_toKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure cmb_id_cdKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);

    procedure Edt_onKeyPress( Sender : TObject; var key : Char);
    procedure setEdtKeyPress;
    procedure btn_ResetClick(Sender: TObject);

  private
  { Private declarations }
  cmb_id_cd_d: TZ0xxArray;
  qryStr : String;
  //그리드 초기화
  procedure initStrGrid;
  //실행중 콤포넌트 사용중지
  procedure disableComponents;
  //실행완료 후 콤포넌트 사용 가능하게
  procedure enableComponents;
  public
  { Public declarations }
  end;

var
  frm_LOSTA240Q: Tfrm_LOSTA240Q;

implementation

procedure Tfrm_LOSTA240Q.setEdtKeyPress;
var i : Integer;
begin
 for i := 0 to componentCount -1 do
 begin
   if (Components[i] is TEdit) then
   begin
     (Components[i] as TEdit).OnKeyPress := Self.Edt_onKeyPress;
   end;
 end;
end;

procedure Tfrm_LOSTA240Q.Edt_onKeyPress ( Sender : TObject; var key : Char);
begin
 if (key = #13) then
   SelectNext( ActiveControl as TEdit , true, True);
end;

{$R *.DFM}
procedure Tfrm_LOSTA240Q.disableComponents;
begin
  disableBtn(Self);

  Application.MainForm.Cursor:= crSQLWait;
  sts_Message.Panels[1].Text := '데이터 처리중...잠시 기다려 주십시오.';
  Application.ProcessMessages;
end;

procedure Tfrm_LOSTA240Q.enableComponents;
begin
  changeBtn(Self);

  dte_from.Enabled := True;
  dte_to.Enabled := True;
  cmb_id_cd.Enabled := True;
  btn_Print.Enabled := True;

  Application.MainForm.Cursor:= crDefault;
  sts_Message.Panels[1].Text := '데이터 처리완료.';
  Application.ProcessMessages;
end;

procedure Tfrm_LOSTA240Q.initStrGrid;
begin
	with grd_display do begin
    	RowCount :=2;
        ColCount := 12;
    	RowHeights[0] := 21;

      ColWidths[0] := 120;
		Cells[0,0] :='입고일자';

    	ColWidths[1] := 170;
		Cells[1,0] :='';

    	ColWidths[2] := 100;
		Cells[2,0] :='정상단말기';

    	ColWidths[3] := 100;
		Cells[3,0] :='배터리무';

    	ColWidths[4] := 100;
		Cells[4,0] :='안테나무';

     	ColWidths[5] := 150;
		Cells[5,0] :='배터리+안테나무';

    	ColWidths[6] := 100;
		Cells[6,0] :='플립무';

      ColWidths[7] := 100;
		Cells[7,0] :='배터리+플립무';

    	ColWidths[8] := 100;
		Cells[8,0] :='안테나+플립무';

     	ColWidths[9] := 130;
		Cells[9,0] :='배터리+안테나+플립';

      ColWidths[10] := 100;
		Cells[10,0] :='작동불가';

      ColWidths[11] := 100;
		Cells[11,0] :='계';
 end;
end;
{----------------------------------------------------------------------------}
procedure Tfrm_LOSTA240Q.btn_CloseClick(Sender: TObject);
begin
     close;
end;

procedure Tfrm_LOSTA240Q.FormCreate(Sender: TObject);
begin
 begin
  {----------------------- 공통 어플리케이션 설정 ---------------------------}
   setEdtKeyPress;
   Self.Caption := '[' + PGM_ID + ']' + TITLE;

   Application.Title := TITLE;
   fSetIcon(Application);
   pSetStsWidth(sts_Message);
   pSetTxtSelAll(Self);

   Self.BorderIcons  := [biSystemMenu,biMinimize];
   Self.Position     := poScreenCenter;
  {--------------------------------------------------------------------------}
  {   }
	if ParamCount <> 6 then begin //실행 프로그램은 제외하고 파라메터 값만 카운트 한다.
    	ShowMessage('로그인 후 사용하세요');
        PostMessage(self.Handle, WM_QUIT, 0,0);
        exit;
    end;

    //공통변수 설정--common_lib.pas 참조할 것.
  common_kait:= ParamStr(1);
  common_caller:= ParamStr(2); 
  common_handle:= intToStr(self.Handle);
  common_userid:= ParamStr(3);
  common_username:= ParamStr(4);
  common_usergroup:= ParamStr(5);
  common_seedkey  := ParamStr(6);

  //테스트 후에는 이 부분을 삭제할 것.
	//common_userid:= '0294'; //ParamStr(2);
	//common_username:= '정호영';
  //ParamStr(3);
	//common_usergroup:= 'KAIT'; //ParamStr(4);


	initSkinForm(SkinData1); //common_lib.pas에 있다.
  initComboBoxWithZ0xx('Z001.dat', cmb_id_cd_d, '전체', ' ',cmb_id_cd);
  initStrGrid;	//그리드 초기화

	qryStr:= '';	//쿼리 스트리링...'쿼리'버튼을 클릭했을 때 보여줌.

    //스태터스바에 사용자 정보를 보여준다.
    sts_Message.Panels[2].Text := '['+ common_userid +']'+ common_username;
  end;

end;


procedure Tfrm_LOSTA240Q.btn_InquiryClick(Sender: TObject);
var
    i:Integer;
    count1, count2, totalCount:Integer;

    seq,RowPos:Integer;

    STR003 : String;
    STR004 : String;

    Label LIQUIDATION;
    Label INQUIRY;
begin
  pInitStrGrd(Self);
  //그리드 디스플레이
  seq     := 1; 	//순번
  RowPos  := 1;	//그리드 레코드 포지션

  //시작시변수 초기화
  STR003 :=' ';
  STR004 :=' ';

  totalCount :=0;
  qryStr:= '';	//쿼리 스트리링...'쿼리'버튼을 클릭했을 때 보여줌.
  grd_display.Cursor := crSQLWait;	//작업중....
  disableComponents;	//작업중 다른 기능 잠시 중지.


  //서버에서 메뉴를 가져오기 위해서 TMAX로 연결한다.
  TMAX.FileName := 'C:\WINDOWS\system32\tmax.env';
  TMAX.Server := 'KAIT_LOSTPRJ';

  if not TMAX.Ping then begin
    ShowMessage('['+TMAX.Server+'] TMAX Server를 찾을수 없습니다.');
    goto LIQUIDATION;
  end;

  TMAX.ReadEnvFile();
  TMAX.Connect;

  if not TMAX.Connected then begin
    ShowMessage('TMAX 서버에 연결되어 있지 않습니다.');
    goto LIQUIDATION;
  end;

  TMAX.AllocBuffer(1024);

  if not TMAX.BufferAlloced then begin
    ShowMessage('TMAX 메모리 할당에 실패 하였습니다.');
    goto LIQUIDATION;
  end;

  TMAX.InitBuffer;
  if not TMAX.Start then begin
    ShowMessage('TMAX 시작에 실패 하였습니다.');
    goto LIQUIDATION;
  end;

  goto INQUIRY;

INQUIRY:

	TMAX.InitBuffer;

    //공통입력 부분
	if (TMAX.SendString('INF002',common_userid                          ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('INF002',common_username                        ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('INF002',common_usergroup                       ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('INF003','LostA240Q'                            ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('INF001','S01'                                  ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('STR001', delHyphen(dte_from.Text)              ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('STR002', delHyphen(dte_to.Text)                ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('STR003', cmb_id_cd_d[cmb_id_cd.ItemIndex].code ) < 0) then  goto LIQUIDATION;
	if (TMAX.SendString('STR004', STR003                                ) < 0) then  goto LIQUIDATION;

  //서비스 호출
  if not TMAX.Call('LOSTA240Q') then
  begin
   if (TMAX.RecvString('INF011',0) = 'Y') then
     sts_Message.Panels[1].Text := ' '+ TMAX.RecvString('INF012',0)
   else
     MessageBox(handle,PChar(TMAX.RecvString('INF012',0)),PChar('서비스호출 오류'),MB_OK);

    goto LIQUIDATION;
  end;

//grd_display
{
입고일자
라벨없음
충전기
배터리
아날로그
계


출력

STR101  입출고일자
INT101  단말기부분품종류 (라벨없음)
INT102  단말기부분품종류 (충전기)
INT103  단말기부분품종류 (베터리)
INT104  단말기부분품종류 (아날로그)
INT105  총 입출고수량 (계)


INT100 : COUNT...약속값 ....읽기
INF013 : 실제 카운트 값 ...읽기

}
	count1 := TMAX.RecvInteger('INF013',0);

  if count1 < 1 then begin
    for i := grd_display.fixedrows to grd_display.rowcount - 1 do
    grd_display.rows[i].Clear;

    grd_display.RowCount := 2;

    sts_Message.Panels[1].Text := '조회된 내역이 없습니다.';

    goto LIQUIDATION;
  end;

  totalCount:= totalCount + count1;
  grd_display.RowCount := grd_display.RowCount + count1;

  with grd_display do begin
    for i:=0 to count1-1 do begin

      STR003 := delHyphen(Trim(TMAX.RecvString('STR101',i)));

      if STR003 = STR004 then
      begin
         Cells[0,RowPos] := ' ';
      end else
      begin
        Cells[0,RowPos] := TMAX.RecvString('STR101',i);
        STR004 := STR003;
      end;

      Cells[1,RowPos]  := TMAX.RecvString('STR102',i);
      Cells[2,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT101',i)));
      Cells[3,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT102',i)));
      Cells[4,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT103',i)));
      Cells[5,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT104',i)));
      Cells[6,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT105',i)));
      Cells[7,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT106',i)));
      Cells[8,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT107',i)));
      Cells[9,RowPos]  := convertWithCommer(InttoStr(TMAX.RecvInteger('INT108',i)));
      Cells[10,RowPos] := convertWithCommer(InttoStr(TMAX.RecvInteger('INT109',i)));
      Cells[11,RowPos] := convertWithCommer(InttoStr(TMAX.RecvInteger('INT110',i)));

      Inc(seq);
      Inc(RowPos);
    end;
  end;
 //스테터스바에 메세지 뿌리기
  sts_Message.Panels[1].Text := ' ' + intToStr(totalCount) + '건이 조회 되었습니다.';
  Application.ProcessMessages;

  count2 := TMAX.RecvInteger('INT100',0);

  if count1 = count2 then
    goto INQUIRY;

  //'쿼리'버튼을 클릭 했을 때 보여줄 스트링
  qryStr:= TMAX.RecvString('INF014',0);


LIQUIDATION:

  TMAX.InitBuffer;
  TMAX.FreeBuffer;
  TMAX.EndTMAX;
  TMAX.Disconnect;
  grd_display.Cursor := crDefault;	//작업완료

  if count1 > 0 then
    grd_display.RowCount := grd_display.RowCount -1;

  enableComponents;
end;

procedure Tfrm_LOSTA240Q.dte_toExit(Sender: TObject);
begin
 sts_Message.Panels[1].Text := '';

 if Trunc(dte_from.Date) > Trunc(dte_to.Date) then
 begin
     showmessage('이후일자는 이전일자보다 작게 설정할 수 없습니다.');
     exit;
 end;
 if Trunc(dte_to.Date) > Trunc(date) then
 begin
     showmessage('이후일자는 현재일자 이후로 설정할 수 없습니다.');
     exit;
 end;

end;

procedure Tfrm_LOSTA240Q.dte_fromExit(Sender: TObject);
begin
     sts_Message.Panels[1].Text := '';

 if Trunc(dte_from.Date) > Trunc(dte_to.Date) then
 begin
     showmessage('이전일자는 이후일자보다 크게 설정할 수 없습니다.');
 end;

end;

procedure Tfrm_LOSTA240Q.FormShow(Sender: TObject);
begin
  btn_ResetClick(Sender);
end;

procedure Tfrm_LOSTA240Q.btn_PrintClick(Sender: TObject);
var
	head:TLOSTA240Q_PRT_HEAD;	//head 계산
	Canvas: TCanvas;
	i, j, page : integer;

    datetime : string;

    curntYposi:Integer;  //현재 y측 포인트
    prntWidth:Cardinal;	 //프린터 폭(297mm)
    prntHeight:Cardinal; //프린터 높이(210mm)
    prntMargin:Cardinal; //오른쪽, 왼쪽 마진(20mm);
    swidth, sheight:Cardinal;	//문자열 높이

    lineStart:Cardinal;	//줄긋기 시작점;
    lineEnd:Cardinal;
    ygap:Cardinal;		//y축 -갭

    //오른쪽 기준 문자열 출력
    procedure rightPrint( x:Integer; text:String);
    begin
 		Canvas.TextOut(x - Canvas.TextWidth(text), curntYposi, text);
    end;

    //가운데 기준 문자열 출력
    procedure centerPrint(x:Integer; text:String);
    begin
        Canvas.TextOut(x - Canvas.TextWidth(text) div 2, curntYposi, text);
    end;

    //문자열에 밑줄 긋기
    procedure centerUnderLine(x:Integer; text:String);
    var
    	start, eend:Cardinal;
    begin
    	start:= x - Canvas.TextWidth(text) div 2;
    	eend:= x + Canvas.TextWidth(text) div 2;
        curntYposi := curntYposi-sheight - 10;
        Canvas.MoveTo(start, curntYposi);
        Canvas.LineTo(eend, curntYposi);

        //다음을 위해서...
        Inc(curntYposi, -ygap);  //다음줄로 이동
    end;

    //타이틀 프린트
	procedure printTitle(page:integer);
    var
    	i:Integer;
        str:String;
        len:Cardinal;
	begin
    	centerPrint(prntWidth div 2,  	 '분실폰 상태별 현황 (일별)');
      //상기 문자열에 대한 밑줄 긋기
      centerUnderLine(prntWidth div 2, '분실폰 상태별 현황 (일별)');

      //머릿말 시작------------------------------------
      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      str := 'PROG ID: LOSTA240Q';
      Canvas.TextOut(lineStart, curntYposi,str);

      str:= '입고일자: '+ dte_from.Text +' ~ '+ dte_to.Text;
      Canvas.TextOut(lineStart, curntYposi - ygap -sheight, str);

      str:= '현재시각(' + datetime + ')';
      len:= Canvas.TextWidth(str);
      Canvas.TextOut(lineEnd-len, curntYposi - ygap -sheight, str);

      str:= 'Page: '+ intToStr(page);
      Canvas.TextOut(lineEnd-len, curntYposi , str);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      //머릿말 끝------------------------------------


      Inc(curntYposi, -ygap);
      //타이틀 윗쪽에 줄 긋기
      Canvas.MoveTo(lineStart, curntYposi);
      Canvas.LineTo(lineEnd, curntYposi);

      //타이틀을 출력한다.
      Inc(curntYposi, -ygap);
      for i:=0 to 11 do
        rightPrint(head.getRightPosition(i), titles[i]);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);
      //타이틀 아래쪽에 줄 긋기
      Canvas.MoveTo(lineStart, curntYposi);
      Canvas.LineTo(lineEnd, curntYposi);

      Inc(curntYPosi, -ygap);	//다음줄 준비...
	end;
begin
  Canvas := Printer.Canvas;
  datetime := Formatdatetime('yyyymmdd',date)+'/'+Formatdatetime('hhnnss',time);

  i     := 0;
  j     := 1;
  page  := 1;

  Printer.Orientation := poLandscape;

  //프린트 시작
  Printer.BeginDoc;	//이부분을 위것 보다 먼저실행하면 에러발생...

  prntWidth := 2960;	//A4 = 297mm
  prntHeight:= 2090;	//A4 = 210mm
  prntMargin:= 200;	  //left, right margin = 20mm

  //본 단위를 바꾸면 글자 숫자 계산을 다시해야 함.
  SetMapMode(Canvas.Handle, MM_LOMETRIC);	//0.1mm 단위
  Canvas.Font.Name    := '굴림체';
  Canvas.Font.Height  := 40;              // 글자체 높이 4mm

  //Canvas.Font.Style:= [fsBold];
  //위치 중요
  head := TLOSTA240Q_PRT_HEAD.Create(prntMargin, prntWidth, Canvas);  //마진, 전체폭,...

  sheight     := Canvas.TextHeight('가');                 //문자높이 계산, 4mm
  ygap        := 10;							                        //1mm 갭
  curntYposi  := -100;   				                          //문자열을 쓰거나 라인을 그을때 y-축 기준점
  lineStart   := head.getRightPosition(0)- head.getLength(0) -20;	//선긋기 x-축 시작점
  lineEnd     := head.getRightPosition(11) +20;						//선긋기 x-축 끝점

  //타이틀 프린트
  printTitle(page);

  //내용 프린트---마지막 줄은 따로 프린트
  with grd_display do begin
    for j:= 1 to RowCount-2 do begin
      for i:=0 to ColCount-1 do
        rightPrint(head.getRightPosition(i), Cells[i,j]);

      Inc(curntYposi, -sheight);	//다음줄 이동
      Inc(curntYposi, -ygap);		//1mm 아래로 이동

      //출력물이 페이지를 넘어가면...

      if -(curntYposi) >= prntHeight then
      begin
        Printer.NewPage;      	//새 페이지 추가
        Inc(page);   			      //페이지 번호 카운트 업
        curntYPosi := -100;     //y축  position을 새로 시작한다.

        //기타 초기화 해야 할 항목이 있으면 여기서...

        printTitle(page);		  //타이틀을 다시 프린트...
      end;
    end;
  end;

  //마지막 줄(총계) 프린트

  //라인긋기...그리드 안에서는 안된다....Canvas가 겹치서..
  //총계 윗줄 라인..
  //  Canvas.MoveTo(lineStart, curntYposi);
  //	Canvas.LineTo(lineEnd, curntYposi);

  Inc(curntYposi, -ygap);		//1mm 아래로 이동

  for i:= 0 to grd_display.ColCount-1 do
    rightPrint(head.getRightPosition(i), grd_display.Cells[i,grd_display.RowCount-1]);

  Inc(curntYposi, -sheight);	//다음줄 이동
  Inc(curntYposi, -ygap);		//1mm 아래로 이동

  //총계 아랫쪽 라인..
  Canvas.MoveTo(lineStart, curntYposi);
  Canvas.LineTo(lineEnd  , curntYposi);

  //프린트 종료
  Printer.EndDoc;

  head.Free; 	//헤드 정보 삭제

  Showmessage('출력이 잘 되었습니다.');

end;





procedure Tfrm_LOSTA240Q.btn_queryClick(Sender: TObject);
var
	cmdStr:String;
  filePath:String;
  f:TextFile;
begin
	if qryStr ='' then
    exit;

  filePath:='..\Temp\' + PGM_ID + '_QRY.txt';
  AssignFile(f, filePath);
  Rewrite(f);
  WriteLn(f, qryStr);
  CloseFile(f);

  cmdStr := 'C:\Program Files\Windows NT\Accessories\wordpad.exe '+ filePath;
  WinExec(PChar(cmdStr), SW_SHOW);
end;

procedure Tfrm_LOSTA240Q.btn_excelClick(Sender: TObject);
begin
	Proc_gridtoexcel('분실폰상태별현황(LOSTA240Q)',grd_display.RowCount, grd_display.ColCount, grd_display, 'LOSTA240Q');
end;

procedure Tfrm_LOSTA240Q.Copy1Click(Sender: TObject);
var
  select: TGridRect;
  str:String;
  i,j:Integer;
begin
	select := grd_display.Selection;

  with select do begin
      str:='';

    if (Left = Right) and (Top = Bottom) then
        str := grd_display.Cells[Left,Top]

      else begin
      for j:= Top to Bottom do begin
        for i:= Left to Right do
            str := str + grd_display.Cells[i,j] + '|';

          str:= str +#13#10;
      end;
    end;
  end;

  Clipboard.AsText := str;
end;

procedure Tfrm_LOSTA240Q.grd_displayDrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
var
  grid:TStringGrid;
  S:String;
begin
	grid:= Sender as TStringGrid;
  grid.RowHeights[ARow] := 21;

	S:= grid.Cells[ACol,ARow];

  if (ARow =0) then
  begin
    grid.Canvas.Brush.Color := clBtnFace;
    grid.Canvas.Font.Color  := clBlack;
    grid.Canvas.FillRect(Rect);
    DrawText(grid.canvas.Handle, PChar(S), length(S), Rect, dt_center or dt_singleline or dt_vcenter);
  end
  else
  // 타이틀인 첫행을 제외한 컬럼들의 정렬을 담당한다.
  begin
    case ACol of
      0: StringGrid_DrawCell(Sender, ACol, ARow, Rect, 1);
      1 : StringGrid_DrawCell(Sender, ACol, ARow, Rect, 0);
      2..11: StringGrid_DrawCell(Sender, ACol, ARow, Rect, 2);
    end;
  end;

end;

procedure Tfrm_LOSTA240Q.grd_displayKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
	if ((ssCtrl in Shift) AND (Key = ord('C'))) then
		Copy1Click(Sender);
end;

{*******************************************************************************
* procedure Name : StringGrid_DrawCell
* 기 능 설 명 : 정해진 변수에 따라서 Grid의 정렬이 된다.
*******************************************************************************}

procedure Tfrm_LOSTA240Q.StringGrid_DrawCell(Sender: TObject; ACol, ARow: Integer; Rect: TRect; i_align : integer);
var
  LeftPos: Integer;
  TopPos : integer;
  CellStr: string;
begin
  with TStringGrid(Sender).Canvas do begin
    CellStr := TStringGrid(Sender).Cells[ACol, ARow];
    TopPos  := ((Rect.Top - Rect.Bottom -TStringGrid(Sender).Canvas.TextHeight(CellStr)) div 2) + Rect.Bottom;
    case i_align of
      1 :  LeftPos := ((Rect.Right - Rect.Left - TStringGrid(Sender).Canvas.TextWidth(CellStr)) div 2) + Rect.Left;
      2 :  LeftPos :=  (Rect.Right - Rect.Left - TStringGrid(Sender).Canvas.TextWidth(CellStr)) +
                        Rect.Left - 5;  
      else LeftPos := Rect.Left + 5;
    end;
    FillRect(Rect);
    TextOut(LeftPos, TopPos, CellStr);
  end;
end;

procedure Tfrm_LOSTA240Q.dte_fromKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   if Key = VK_RETURN then
    dte_to.SetFocus;
end;

procedure Tfrm_LOSTA240Q.dte_toKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   if Key = VK_RETURN then
    cmb_id_cd.SetFocus;
end;

procedure Tfrm_LOSTA240Q.cmb_id_cdKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   if Key = VK_RETURN then
    btn_InquiryClick(Sender);
end;

procedure Tfrm_LOSTA240Q.btn_ResetClick(Sender: TObject);
var i : Integer;
begin
  changeBtn(Self);

	dte_from.Date := date-30;
	dte_to.Date := date;
  cmb_id_cd.ItemIndex := 0;

  dte_from.SetFocus;
  
  for i := grd_display.fixedrows to grd_display.rowcount - 1 do
    grd_display.rows[i].Clear;
    grd_display.RowCount := 2;
end;

end.
