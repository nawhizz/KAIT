{*---------------------------------------------------------------------------
프로그램ID    : LOSTA320Q (회수단말기 잔고 현황)
프로그램 종류 : Online
작성자	      : 최 대 성
작성일	      : 2011. 09. 11
완료일	      : ####. ##. ##
프로그램 개요 :
-------------------------------------------------------------------------------
<버전 관리>
변경일자      :
작성자	      :
변경내용      :
처리번호      :
Ver	      :
-----------------------------------------------------------------------------*}

unit u_LOSTA320Q;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, ExtCtrls, ComCtrls, Grids, Mask, ToolEdit, checklst, cpakmsg, printers,
  Menus, WinSkinData, so_tmax, common_lib, Clipbrd,LOSTA320Q_PRT_HEAD,Func_Lib, ComObj;

const
  TITLE   = '회수단말기 잔고 현황';
  PGM_ID  = 'LOSTA320Q';

type
  Tfrm_LOSTA320Q = class(TForm)
    Bevel1     : TBevel;
    Bevel2     : TBevel;
    Bevel3     : TBevel;
    Bevel4     : TBevel;
    cmb_gubun  : TComboBox;
    cmb_id_cd  : TComboBox;
    dte_to     : TDateEdit;
    lbl_Program_Name: TLabel;
    Label3     : TLabel;
    Label1     : TLabel;
    Label2     : TLabel;
    Copy1      : TMenuItem;
    pnl_Command: TPanel;
    Panel2     : TPanel;
    PopupMenu1 : TPopupMenu;
    SkinData1  : TSkinData;
    sts_Message: TStatusBar;
    grd_display: TStringGrid;
    TMAX       : TTMAX;
    btn_Add: TSpeedButton;
    btn_Update: TSpeedButton;
    btn_Delete: TSpeedButton;
    btn_Inquiry: TSpeedButton;
    btn_Link: TSpeedButton;
    btn_Print: TSpeedButton;
    btn_Close: TSpeedButton;
    btn_query: TSpeedButton;
    btn_excel: TSpeedButton;
    btn_reset: TSpeedButton;

    procedure btn_CloseClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btn_InquiryClick(Sender: TObject);
    procedure grd_displayDrawCell(Sender: TObject; ACol,
    ARow: Integer; Rect: TRect; State: TGridDrawState);
    procedure StringGrid_DrawCell(Sender: TObject; ACol, ARow: Integer; Rect: TRect; i_align : integer);
    procedure grd_displayKeyDown(Sender: TObject; var Key: Word;
    Shift: TShiftState);
    procedure btn_PrintClick(Sender: TObject);
    procedure Copy1Click(Sender: TObject);
    procedure btn_excelClick(Sender: TObject);
    procedure btn_queryClick(Sender: TObject);
    procedure btn_resetClick(Sender: TObject);

  private
    { Private declarations }
  procedure initStrGrid;
  procedure InitComponents;

  procedure disableComponents;
  procedure enableComponents;

  public
    { Public declarations }
  end;

var
  frm_LOSTA320Q: Tfrm_LOSTA320Q;
  arrIdCd : TZ0xxArray;
  qryStr:String;

implementation
uses cpaklibm;
{$R *.DFM}

procedure Tfrm_LOSTA320Q.btn_CloseClick(Sender: TObject);
begin
     close;
end;

procedure Tfrm_LOSTA320Q.FormCreate(Sender: TObject);
begin

  if ParamCount <> 6 then begin //실행 프로그램은 제외하고 파라메터 값만 카운트 한다.
    ShowMessage('로그인 후 사용하세요');
      PostMessage(self.Handle, WM_QUIT, 0,0);
      exit;
  end;

  // 공통변수 설정 common_lib.pas 참조할 것.
  common_kait       := ParamStr(1);
  common_caller     := ParamStr(2);
  common_handle     := intToStr(self.Handle);
  common_userid     := ParamStr(3);
  common_username   := ParamStr(4);
  common_usergroup  := ParamStr(5);
  common_seedkey    := ParamStr(6);

    // 테스트 후에는 이 부분을 삭제할 것.
    // 임시롤 로그인 데이터 삽입
//    common_userid   := '0294';    //ParamStr(2);
//    common_username := '정호영';  //ParamStr(3);
//    common_usergroup:= 'KAIT';    //ParamStr(4);

    {----------------------- 공통 어플리케이션 설정 ---------------------------}

    // 프로그램 캡션 설정
    Self.Caption := '[' + PGM_ID + ']' + TITLE;

    // 테스크바 캡션설정
    Application.Title := TITLE;

    // 프로그램 내부 캡션 설정
    lbl_Program_Name.Caption := TITLE;

    // 프로그램 상단 아이콘 설정
    fSetIcon(Application);

    // 메세지 바 넓이 설정
    pSetStsWidth(sts_Message);

    // 텍스트 선택시 전체 선택 기능
    pSetTxtSelAll(Self);

    // 프로그램 보더 아이콘 설정
    Self.BorderIcons  := [biSystemMenu,biMinimize];

    // 프로그램 시작 위치 설정
    Self.Position     := poScreenCenter;
    {--------------------------------------------------------------------------}

    //스킨 초기화
    initSkinForm(SkinData1);      // common_lib.pas에 있다.
    // 그리드 초기화
    initStrGrid;
    initComboBoxWithZ0xx('Z001.dat',arrIdCd,'전체','',cmb_id_cd);

    cmb_gubun.Items.add('합계                                    T');
    cmb_gubun.Items.add('스마트폰(패드)                          S');

    InitComponents;      

    sts_Message.Panels[2].Text := '['+ common_userid +']'+ common_username;
end;

(******************************************************************************)
(* procedure name  : InitComponents                                           *)
(* procedure 기 능 : 폼에사용한 컴퍼넌트를 초기화한다.                        *)
(*                                                                            *)
(******************************************************************************)
procedure Tfrm_LOSTA320Q.InitComponents;
begin
  //쿼리 스트리링...'쿼리'버튼을 클릭했을 때 보여줌.
  qryStr              := '';
  dte_to.Date         := Date -1;
  cmb_gubun.ItemIndex := 0 ;
  cmb_id_cd.ItemIndex := 0 ;

  sts_Message.Panels[1].Text := '';

  pInitStrGrd(Self);
  changeBtn(Self);
  btn_Print.Enabled := True;

end;

{*******************************************************************************
* procedure Name : initStrGrid
* 기 능 설 명 : 그리드를 초기화 하고 필드 타이틀 설정을 한다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.initStrGrid;
begin
	with grd_display do begin
      RowCount := 2;
      ColCount := 7;
      RowHeights[0] := 21;

      cells[0,0] := '사업자';
      cells[1,0] := '입고';
      cells[2,0] := '출고';
      cells[3,0] := '장기/귀속';
      cells[4,0] := '보험사매각(협회)';
      cells[5,0] := '잔고';
      cells[6,0] := '보험사매각(경찰)';

      colwidths[0] := 120;
      colwidths[1] := 100;
      colwidths[2] := 100;
      colwidths[3] := 100;
      colwidths[4] := 120;
      colwidths[5] := 100;
      colwidths[6] := 120;
    end;

end;

procedure Tfrm_LOSTA320Q.btn_InquiryClick(Sender: TObject);
var
    i,RowPos,count : Integer;
    Label LIQUIDATION;
    Label INQUIRY;

begin
    initStrGrid;
    //그리드 디스플레이 설정
    RowPos:= 1;	//그리드 레코드 포지션
    grd_display.RowCount := 2;

    grd_display.Cursor := crSQLWait;	//작업중....

    disableComponents;	//작업중 다른 기능 잠시 중지.

    // 디버그용 쿼리 변수 초기화
    qryStr:= '';

    //서버에서 메뉴를 가져오기 위해서 TMAX로 연결한다.
    TMAX.FileName := 'C:\WINDOWS\system32\tmax.env';
    TMAX.Server := 'KAIT_LOSTPRJ';

    if not TMAX.Ping then begin
    ShowMessage('['+TMAX.Server+'] TMAX Server를 찾을수 없습니다.');
    goto LIQUIDATION;
    end;

    TMAX.ReadEnvFile();
    TMAX.Connect;

    if not TMAX.Connected then begin
    ShowMessage('TMAX 서버에 연결되어 있지 않습니다.');
    goto LIQUIDATION;
    end;

    TMAX.AllocBuffer(1024);
    if not TMAX.BufferAlloced then begin
    ShowMessage('TMAX 메모리 할당에 실패 하였습니다.');
    goto LIQUIDATION;
    end;

    TMAX.InitBuffer;
    if not TMAX.Start then begin
    ShowMessage('TMAX 시작에 실패 하였습니다.');
    goto LIQUIDATION;
    end;

INQUIRY:
	TMAX.InitBuffer;

    //공통입력 부분
    if (TMAX.SendString('INF002',common_userid)   < 0)  then  goto LIQUIDATION;
    if (TMAX.SendString('INF002',common_username) < 0)  then  goto LIQUIDATION;
    if (TMAX.SendString('INF002',common_usergroup)< 0)  then  goto LIQUIDATION;
    if (TMAX.SendString('INF003','LostA320Q')     < 0)  then  goto LIQUIDATION;

    if (TMAX.SendString('INF001','S01') < 0) then  goto LIQUIDATION;

    if (TMAX.SendString('STR001', delHyphen(dte_to.Text)) < 0) then  goto LIQUIDATION;
    if (TMAX.SendString('STR002', copy(cmb_gubun.Items.Strings[cmb_gubun.ItemIndex
			],41,1))    < 0) then  goto LIQUIDATION;
    if (TMAX.SendString('STR003', arrIdCd[cmb_id_cd.ItemIndex].code) < 0) then  goto LIQUIDATION;
    // 사용자 데이터 설정 완료

    //서비스 호출
    if not TMAX.Call('LOSTA320Q') then
    begin
      sts_Message.Panels[1].Text := ' '+ TMAX.RecvString('INF012',0);
      MessageBox(handle,PChar(TMAX.RecvString('INF012',0)),PChar('서비스호출 오류'),MB_OK);
    end;

    qryStr:= TMAX.RecvString('INF014',0);
          
    // 조회 결과 DISPLAY
    count := TMAX.RecvInteger('INF013',0);
    
    grd_display.RowCount := grd_display.RowCount + count;

    with grd_display do begin
      for i:=0 to count-1 do
      begin
        Cells[0,RowPos]   := TMAX.RecvString('STR101',i); // 사업자
        Cells[1,RowPos]   := convertWithCommer(TMAX.RecvString('INT101',i)); // 입고
        Cells[2,RowPos]   := convertWithCommer(TMAX.RecvString('INT102',i)); // 출고
        Cells[3,RowPos]   := convertWithCommer(TMAX.RecvString('INT103',i)); // 장기/귀속
        Cells[4,RowPos]   := convertWithCommer(TMAX.RecvString('INT105',i)); // 보험사매각(협회)
        Cells[5,RowPos]   := convertWithCommer(TMAX.RecvString('INT104',i)); // 잔고
        Cells[6,RowPos]   := convertWithCommer(TMAX.RecvString('INT106',i)); // 보험사매각(경찰)

        Inc(RowPos);
      end;
    end;

    if(count > 0) then Dec(count);

    //스테터스바에 메세지 뿌리기
    sts_Message.Panels[1].Text := ' ' + IntToStr(count)  + '건이 조회 되었습니다.';
    Application.ProcessMessages;


LIQUIDATION:
  TMAX.InitBuffer;
  TMAX.FreeBuffer;
  TMAX.EndTMAX;
  TMAX.Disconnect;

  grd_display.Cursor := crDefault;	//작업완료

  if ( count > 0 ) then
    grd_display.RowCount := grd_display.RowCount -1 ;

  enableComponents;
end;

procedure Tfrm_LOSTA320Q.FormShow(Sender: TObject);
begin
  dte_to.SetFocus;
end;

{*******************************************************************************
* procedure Name : btn_PrintClick
* 기 능 설 명 : 조회된 결과를 출력한다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.btn_PrintClick(Sender: TObject);
var
    head:TLOSTA320Q_PRT_HEAD;	//head 계산
    Canvas: TCanvas;
    i, j, page : integer;

    datetime : string;

    curntYposi      :Integer;         //현재 y측 포인트
    prntWidth       :Cardinal;	      //프린터 폭(297mm)
    prntHeight      :Cardinal;        //프린터 높이(210mm)
    prntMargin      :Cardinal;        //오른쪽, 왼쪽 마진(20mm);
    swidth, sheight :Cardinal;	      //문자열 높이

    lineStart       :Cardinal;	      //줄긋기 시작점;
    lineEnd         :Cardinal;
    ygap            :Cardinal;		    //y축 -갭

    //오른쪽 기준 문자열 출력
    procedure rightPrint( x:Integer; text:String);
    begin
 		  Canvas.TextOut(x - Canvas.TextWidth(text), curntYposi, text);
    end;

    //가운데 기준 문자열 출력
    procedure centerPrint(x:Integer; text:String);
    begin
        Canvas.TextOut(x - Canvas.TextWidth(text) div 2, curntYposi, text);
    end;

    //문자열에 밑줄 긋기
    procedure centerUnderLine(x:Integer; text:String);
    var
    	start, eend:Cardinal;
    begin
    	start := x - Canvas.TextWidth(text) div 2;
    	eend  := x + Canvas.TextWidth(text) div 2;
      curntYposi := curntYposi-sheight - 10;
      Canvas.MoveTo(start, curntYposi);
      Canvas.LineTo(eend, curntYposi);

      //다음을 위해서...
      Inc(curntYposi, -ygap);  //다음줄로 이동
    end;

    //타이틀 프린트
    procedure printTitle(page:integer);
    var
      i:Integer;
      len :Cardinal;
      str : String;
    begin
      centerPrint(prntWidth div 2,  	 '회수 단말기 잔고 현황');
      //상기 문자열에 대한 밑줄 긋기
      centerUnderLine(prntWidth div 2, '회수 단말기 잔고 현황');

      //머릿말 시작------------------------------------
      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      str := 'PROG ID: LOSTA320Q';
      Canvas.TextOut(lineStart, curntYposi,str);

      str:= '기준일자: ' + dte_to.Text;
      Canvas.TextOut(lineStart, curntYposi - ygap -sheight, str);

      str:= '사업자 기준 : ' + arrIdCd[cmb_id_cd.ItemIndex].name;
      Canvas.TextOut(lineEnd div 2 - Canvas.TextWidth(str) div 2, curntYposi - ygap -sheight, str);

      str:= '현재시각(' + datetime + ')';
      len:= Canvas.TextWidth(str);
      Canvas.TextOut(lineEnd-len, curntYposi - ygap -sheight, str);

      str:= 'Page: '+ intToStr(page);
      Canvas.TextOut(lineEnd-len, curntYposi , str);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);

      //머릿말 끝------------------------------------
      Inc(curntYposi, -ygap);
      //타이틀 윗쪽에 줄 긋기
      Canvas.MoveTo(lineStart, curntYposi);
      Canvas.LineTo(lineEnd, curntYposi);

      //타이틀을 출력한다.
      Inc(curntYposi, -ygap);

      for i:=0 to 6 do
        rightPrint(head.getRightPosition(i), titles[i]);

      Inc(curntYposi, -sheight);
      Inc(curntYposi, -ygap);
      //타이틀 아래쪽에 줄 긋기
      Canvas.MoveTo(lineStart, curntYposi);
      Canvas.LineTo(lineEnd, curntYposi);

      Inc(curntYPosi, -ygap);	//다음줄 준비...
    end;

begin
    //프린팅 캔바스...
    Canvas := Printer.Canvas;
    datetime := Formatdatetime('yyyymmdd',date)+'/'+Formatdatetime('hhnnss',time);
    i := 0;
    j := 1;
    page := 1;

    Printer.Orientation := poLandscape;
    //프린트 시작
    Printer.BeginDoc;	//이부분을 위것 보다 먼저실행하면 에러발생...

    prntWidth := 2960;	//A4 = 297mm
    prntHeight:= 2090;	//A4 = 210mm
    prntMargin:= 200;	  //left, right margin = 20mm

    //본 단위를 바꾸면 글자 숫자 계산을 다시해야 함.
    SetMapMode(Canvas.Handle, MM_LOMETRIC);	//0.1mm 단위
    Canvas.Font.Name := '굴림체';
    Canvas.Font.Height := 40;  // 글자체 높이 4mm
    //Canvas.Font.Style:= [fsBold];

    //위치 중요
    head := TLOSTA320Q_PRT_HEAD.Create(prntMargin, prntWidth, Canvas);  //마진, 전체폭,...

    sheight     := Canvas.TextHeight('가'); //문자높이 계산, 4mm
    ygap        := 10;							        //1mm 갭
    curntYposi  := -100;   				          //문자열을 쓰거나 라인을 그을때 y-축 기준점
    lineStart   := head.getRightPosition(0)- head.getLength(0) -20;	//선긋기 x-축 시작점
    lineEnd     := head.getRightPosition(6) +20;						//선긋기 x-축 끝점

    //타이틀 프린트
    printTitle(page);

    //내용 프린트---마지막 줄은 따로 프린트
    with grd_display do begin
    	for j:= 1 to RowCount-2 do
      begin
        for i:=0 to ColCount-1 do
            rightPrint(head.getRightPosition(i), Cells[i,j]);

			Inc(curntYposi, -sheight);	//다음줄 이동
			Inc(curntYposi, -ygap);		//1mm 아래로 이동

			//출력물이 페이지를 넘어가면...
        if curntYposi >= prntHeight then begin
          Printer.NewPage;      	//새 페이지 추가
            Inc(page);   			//페이지 번호 카운트 업
            curntYPosi := -100;     //y축  position을 새로 시작한다.

            //기타 초기화 해야 할 항목이 있으면 여기서...

            printTitle(page);		//타이틀을 다시 프린트...
        end;
      end;
    end;

    //마지막 줄(총계) 프린트

    //라인긋기...그리드 안에서는 안된다....Canvas가 겹치서..
    //총계 윗줄 라인..
    Canvas.MoveTo(lineStart , curntYposi);
    Canvas.LineTo(lineEnd   , curntYposi);

    Inc(curntYposi, -ygap);		//1mm 아래로 이동
    for i:= 0 to grd_display.ColCount-1 do
      rightPrint(head.getRightPosition(i), grd_display.Cells[i,grd_display.RowCount-1]);

    Inc(curntYposi, -sheight);	//다음줄 이동
    Inc(curntYposi, -ygap);		//1mm 아래로 이동
    //총계 아랫쪽 라인..
    Canvas.MoveTo(lineStart, curntYposi);
    Canvas.LineTo(lineEnd, curntYposi);

    //프린트 종료
    Printer.EndDoc;

    head.Free; 	//헤드 정보 삭제

    Showmessage('출력이 잘 되었습니다.');
end;

{*******************************************************************************
* procedure Name : disableComponents
* 기 능 설 명 :버튼을 누르지 못하게 한다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.disableComponents;
begin
  dte_to.Enabled := false;
  btn_Inquiry.Enabled := False;

  btn_close.Enabled:= False;
end;

{*******************************************************************************
* procedure Name : enableComponents
* 기 능 설 명 :버튼을 눌러 다른 기능을 할 수 있게한다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.enableComponents;
begin
  dte_to.Enabled    := True;
  btn_Inquiry.Enabled := True;

  btn_close.Enabled:= True;
end;

{*******************************************************************************
* procedure Name : grd_displayDrawCell
* 기 능 설 명 : 그리드 타이틀 부분에 대한 데코레이션 효과를 준다.
*
*******************************************************************************}
procedure Tfrm_LOSTA320Q.grd_displayDrawCell(Sender: TObject; ACol,
  ARow: Integer; Rect: TRect; State: TGridDrawState);
var
  grid:TStringGrid;
  S:String;
begin
	grid:= Sender as TStringGrid;
  grid.RowHeights[ARow] := 21;

	S:= grid.Cells[ACol,ARow];
  if (ARow = 0) then begin
    grid.Canvas.Brush.Color := clBtnFace;
    grid.Canvas.Font.Color := clBlack;
    grid.Canvas.FillRect(Rect);
    DrawText(grid.canvas.Handle, PChar(S), length(S), Rect, dt_center or dt_singleline or dt_vcenter);
  end
  else
    // 타이틀인 첫행을 제외한 컬럼들의 정렬을 담당한다.
    begin
    case ACol of
      0: StringGrid_DrawCell(Sender, ACol, ARow, Rect, 1);
      1..6: StringGrid_DrawCell(Sender, ACol, ARow, Rect, 2);
    end;
  end;

{
    if (ARow mod 2) = 1 then begin
		grid.Canvas.Brush.Color := RGB(240,240,240);
		grid.Canvas.FillRect(Rect);
		grid.Canvas.TextOut(Rect.Left + 2, Rect.Top + 2, S);
    end;
}
end;

{*******************************************************************************
* procedure Name : grd_displayKeyDown
* 기 능 설 명 : 키다운에 해당하는 역할을 한다.(Ctrl + C)에 대한 기능 수행
*******************************************************************************}
procedure Tfrm_LOSTA320Q.grd_displayKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
	if ((ssCtrl in Shift) AND (Key = ord('C'))) then
		Copy1Click(Sender);
end;


{*******************************************************************************
* procedure Name : StringGrid_DrawCell
* 기 능 설 명 : 정해진 변수에 따라서 Grid의 정렬이 된다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.StringGrid_DrawCell(Sender: TObject; ACol, ARow: Integer; Rect: TRect; i_align : integer);
var
  LeftPos: Integer;
  TopPos : integer;
  CellStr: string;
begin
  with TStringGrid(Sender).Canvas do begin
    CellStr := TStringGrid(Sender).Cells[ACol, ARow];
    TopPos  := ((Rect.Top - Rect.Bottom -TStringGrid(Sender).Canvas.TextHeight(CellStr)) div 2) + Rect.Bottom;
    case i_align of
      1 :  LeftPos := ((Rect.Right - Rect.Left - TStringGrid(Sender).Canvas.TextWidth(CellStr)) div 2) + Rect.Left;
      2 :  LeftPos :=  (Rect.Right - Rect.Left - TStringGrid(Sender).Canvas.TextWidth(CellStr)) +
                        Rect.Left - 5;  
      else LeftPos := Rect.Left + 5;
    end;
    FillRect(Rect);
    TextOut(LeftPos, TopPos, CellStr);
  end;
end;

{*******************************************************************************
* procedure Name : Copy1Click
* 기 능 설 명 : 그리드에 선택된 내역을 클릭보드에 복사하는 역할을한다.
*******************************************************************************}
procedure Tfrm_LOSTA320Q.Copy1Click(Sender: TObject);
var
  select: TGridRect;
  str:String;
  i,j:Integer;
begin
  select := grd_display.Selection;

  with select do begin
    str:='';

    if (Left = Right) and (Top = Bottom) then
        str := grd_display.Cells[Left,Top]

    else begin
      for j:= Top to Bottom do begin
        for i:= Left to Right do
            str := str + grd_display.Cells[i,j] + '|';

        str:= str +#13#10;
      end;
    end;
  end;

  Clipboard.AsText := str;
end;

procedure Tfrm_LOSTA320Q.btn_excelClick(Sender: TObject);
begin
	Proc_gridtoexcel(TITLE + '(' + PGM_ID + ')',grd_display.RowCount, grd_display.ColCount, grd_display, PGM_ID);
end;

procedure Tfrm_LOSTA320Q.btn_queryClick(Sender: TObject);
var
  cmdStr:String;
  filePath:String;
  f:TextFile;
begin
	if qryStr ='' then
    exit;

  filePath  :='..\Temp\' + PGM_ID + '_QRY.txt';
  AssignFile(f, filePath);
  Rewrite(f);
  WriteLn(f, qryStr);
  CloseFile(f);

  cmdStr := 'C:\Program Files\Windows NT\Accessories\wordpad.exe '+ filePath;
  WinExec(PChar(cmdStr), SW_SHOW);
end;
procedure Tfrm_LOSTA320Q.btn_resetClick(Sender: TObject);
begin
  InitComponents;
end;

end.
