//공통함수
//작성일 : 2011.7.20
//작성자 : 구내영

unit common_lib;

interface

Uses
  	Windows, SysUtils, Dialogs, Grids, Controls;

//공통변수
var common_kait:String = 'X/hhP1cTg/pXHxebWsq/txFVvW8=';	//KAIT를 암호화
var common_handle:String ='0'; 		//자신의 윈도우 핸들
var common_caller:String ='0';		//호출한 윈도우 핸들
var common_userid:String ='';   	//사용자ID
var common_username:String ='';		//사용자명
var common_usergroup:String ='';	//사용자그롭

//주어진 문자열을 암호하 하여 반환한다.
//패스에 'INIcrypto01h.dll'가 있어야 한다.
function  Get_EncStr(strPara: String):String;forward;
//스트링 그리드의 선택된 레코드를 삭제한다.
procedure DeleteStringGridRow1(AStringGrid:TStringGrid;Arow:Integer); forward;
//외부 프로그램을 실행시킨다.
function ExecExternProg(progID:String):Boolean; forward;

implementation

function ExecExternProg(progID:String):Boolean;
var
	commandStr:String;
	ret:Integer;
begin
	result:= True;

	commandStr := progID +'.exe '+
    			    common_kait +' '+
    				common_handle +' '+
                    common_userid +' '+
                    common_username +' '+
                    common_usergroup;

	ret := WinExec(PChar(commandStr), SW_Show);
	if ret <= 31 then begin
		result:= False;

        MessageBeep (0) ;
		if ret = ERROR_FILE_NOT_FOUND then
			ShowMessage (''''+ progID +'.exe' +'''' + '을 찾을 수 없습니다')
		else
			ShowMessage (''''+ progID +'.exe' +'''' + ' 실행시 오류 발생');
   end
end;


function  Get_EncStr(strPara: String):String;
type
   TFunc = function (type_str:PChar;input_str:PChar;output_str:PChar):Integer; stdcall;
var
   ret: integer;
   out_str: PChar;
   H: THandle;
   hash: TFunc;
   sErrMsg    : String ;
begin
   try
      Result := strPara;
      H := LoadLibrary( PChar( 'INIcrypto01h.dll') );
      GETMEM(out_str, 100);
      @hash := GetProcAddress(H, 'Hash' );
      ret := hash(Pchar('SHA1'),Pchar(strPara),out_str);
      if ret < 0 then begin
        sErrMsg := '암호를 Hash암호화 하는데 실패했습니다.'+ #13#10 +
                   '전산본부로 연락하십시오' ;
        case MessageDlg( sErrMsg , mtError	 , [mbOK] , 0 ) of
          mrOK : begin
                 end;
        end;
        Exit;
      end;
      Result := TRIM(out_str);
   finally
      FreeLibrary( H );
      FreeMem(out_str);
   end;
end;

procedure DeleteStringGridRow1(AStringGrid:TStringGrid;Arow:Integer);
var
  i,j:integer;
begin
  for i := Arow to AStringGrid.RowCount - 2 do
  begin
    for j := 0 to AStringGrid.ColCount - 1 do
    begin
      AStringGrid.Cells[j,i] := AStringGrid.Cells[j,i+1];
    end;
  end;
  AStringGrid.RowCount := AStringGrid.RowCount-1;
end;

end.

